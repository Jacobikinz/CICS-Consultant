[
    {
        "dept": "CS",
        "id": "220",
        "name": "Programming Methodology",
        "creds": 4,
        "offered": "Fall and Spring",
        "description": "Development of individual skills necessary for designing, implementing, testing and modifying larger programs, including: design strategies and patterns, using functional and object-oriented approaches, testing and program verification, code refactoring, interfacing with libraries. There will be significant programming and mid-term and final examinations. Prerequisite: CS 187. 4 credits."
    },
    {
        "dept": "CS",
        "id": "230",
        "name": "Computer Systems Principles",
        "creds": 4,
        "offered": "Fall and Spring",
        "description": "Large-scale software systems like Google - deployed over a world-wide network of hundreds of thousands of computers - have become a part of our lives. These are systems success stories - they are reliable, available ('up' nearly all the time), handle an unbelievable amount of load from users around the world, yet provide virtually instantaneous results. On the other hand, many computer systems don't perform nearly as well as Google - hence the now-clich? 'the system is down.' In this class, we study the scientific principles behind the construction of high-performance, scalable systems. The course begins with a discussion of C data representation, and moves up the stack from there to the features of modern architectures, assembly languages, and operating system services such as I/O, process, and synchronization. This class assumes students have either taken CS 198C or have equivalent experience in the C programming language. Prerequisite: CS 187. 4 credits."
    },
    {
        "dept": "CS",
        "id": "240",
        "name": "Reasoning Under Uncertainty",
        "creds": 4,
        "offered": "Fall and Spring",
        "description": "Development of mathematical reasoning skills for problems that involve uncertainty. Each concept will be illustrated by real-world examples and demonstrated through in-class and homework exercises. Counting and probability -- basic counting problems, probability definitions, mean, variance, binomial distribution, discrete random variables, continuous random variables, Markov and Chebyshev bounds, Laws of large number, and central limit theorem. Probabilistic reasoning -- conditional probability and odds, Bayes' Law, Markov Chains, Bayesian Network, Markov Decision Processes. Prerequisites: CS 187 and MATH 132. 4 credits."
    },
    {
        "dept": "CS",
        "id": "250",
        "name": "Introduction to Computation",
        "creds": 4,
        "offered": "Fall and Spring",
        "description": "Basic concepts of discrete mathematics useful to computer science: set theory, strings and formal languages, propositional and predicate calculus, relations and functions, basic number theory. Induction and recursion: interplay of inductive definition, inductive proof, and recursive algorithms. Graphs, trees, and search. Finite-state machines, regular languages, nondeterministic finite automata, Kleene's Theorem. Problem sets, 2 midterm exams, timed final. Prerequisite: CS 187 (or ECE 241) and MATH 132. 4 credits."
    },
    {
        "dept": "CS",
        "id": "311",
        "name": "Introduction to Algorithms",
        "creds": 4,
        "offered": "Fall and Spring",
        "description": "This course will introduce you to a variety of techniques to design algorithms, such as divide and conquer, greedy, dynamic programming, and network flow. You will learn to study the performance of various algorithms within a formal, mathematical framework. You will also learn how to design very efficient algorithms for many kinds of problems and recognize problems that currently do not have efficient algorithms. Assignments may include programming: you should be able to program in Java, C, or some other closely related language. Mathematical experience (as provided by CS 250) is required. This course counts as an Elective toward the CS Major. Prerequisite: CS 187 and either CS 250 or MATH 455. 4 credits."
    },
    {
        "dept": "CS",
        "id": "320",
        "name": "Introduction to Software Engineering",
        "creds": 4,
        "offered": "Fall and Spring",
        "description": "In this course, students learn and gain practical experience with software engineering principles and techniques. The practical experience centers on a semester-long team project in which a software development project is carried through all the stages of the software life cycle. Topics in this course include requirements analysis, specification, design, abstraction, programming style, testing, maintenance, communication, teamwork, and software project management. Particular emphasis is placed on communication and negotiation skills and on designing and developing maintainable software. Use of computer required. Several written assignments, in-class presentations, and a term project. This course satisfies the IE Requirement for CS Major. Prerequisite: CS 220. 4 credits."
    },
    {
        "dept": "CS",
        "id": "325",
        "name": "Introduction to Human Computer Interaction",
        "creds": 3,
        "offered": "Fall",
        "description": "Human-Computer Interaction design is 'design for human use'. Computers are a ubiquitous part of many interactions in our lives, from the mundane everydayness of light switches and 'smart' vending machines to entertainment and education to sophisticated instruments and complex energy and defense systems. In this course, we will challenge you to broaden your grasp of what a user interface can and should be, and try your hand at doing better yourself. It is a fast-paced, hands-on, project-based experience that will challenge many of your ideas of what computer science is and can be. It is designed around active lecture sessions supported by readings, working classes, and team projects, where students practice and explore the concepts introduced in lecture, and go well beyond them to learn and apply HCI techniques that build into group projects. More specifically, the course adopts a human-centered design (HCD) approach and teaches a highly iterative process called design thinking. The design thinking process draws heavily on the fundamentals of human-computer interaction (HCI) methods. I also cover design methodologies, evaluation methodologies (both quantitative and qualitative), human information processing, cognition, and perception. This course counts as an Elective toward the CS and INFORM Majors. Prerequisite: CS 186 (or CS 187). 3 credits."
    },
    {
        "dept": "CS",
        "id": "326",
        "name": "Web Programming",
        "creds": 4,
        "offered": "Fall and Spring",
        "description": "The web is arguably today's most important application platform. Web browsers run on practically every device, and even many phone applications are in fact web applications under the covers. This course will cover a broad range of client-side web technologies, including HTTP itself, HTML5, CSS, and JavaScript; it will additionally cover key concepts for the server side of web applications, including key value stores and SQL servers. This course will also cover key concepts and technologies including AJAX, JavaScript libraries (e.g., jQuery), and web security. This course is hands-on and heavily project-based; students will construct a substantial dynamic web application based on the concepts, technologies, and techniques presented during lectures and in readings. This course satisfies the IE Requirement for CS and INFORM Majors. Prerequisites: CS 220 (OR CS 230), OR INFO 248 AND CS 186 (OR CS 187). Note: as the name web programming denotes, programming is a key component of this class. Previous background in JavaScript is strongly recommended. 4 credits."
    },
    {
        "dept": "CS",
        "id": "328",
        "name": "Mobile Health Sensing and Analytics",
        "creds": 3,
        "offered": "Fall",
        "description": "In recent years, the ability to continuously monitor activities, health, and lifestyles of individuals using sensor technologies has reached unprecedented levels. The typical smartphone comes equipped with a plethora of sensors for monitoring activity, speech patterns, social interactions, and location. In addition, mobile accessories such as wearable wristbands and chestbands now enable routine and continuous monitoring of a host of physiological signals (e.g., heart rate, respiratory rate, skin Conductance, and others.). In conjunction, these sensors can enable higher-order inferences about more complex human activities/behavioral states (e.g., activity patterns, stress, sleep, etc.). Such ubiquitous sensing in daily life, referred to as mobile health sensing and monitoring, promises to revolutionize our understanding of human activities and health conditions. This course is an introduction to personal health sensing and monitoring through mobile phones and on-body sensors and addresses several aspects including mobile devices and applications for health, sensor data quality and reliability challenges, inference of key health assessments from sensor data including such as activity patterns, sleep patterns, or stress, sensor data visualization and feedback, and practical considerations such as battery lifetime. Prerequisite: CS 187 (OR INFO 248 AND CS 186). 3 credits."
    },
    {
        "dept": "CS",
        "id": "333",
        "name": "Internet of Things",
        "creds": 3,
        "offered": "Spring",
        "description": "We are living in a world where everyday objects, such as smartphones, cars, TVs, and even refrigerators, are becoming smarter and constantly connected to each other to build, operate, and manage the physical world. This emerging paradigm, namely the Internet of Things (IoT), has great potential to impact how individuals live and work by providing a source of innovative decision making. The design of the IoT, which is defined as a internetwork of physical items each embedded with sensors that are connected to the Internet , requires the understanding of embedded electronics, software, sensors, network, and data analytics. To prepare our students as forerunners of this future, this course will introduce a wide range of topics in the broad areas of IoT, and provide hands-on experiences via a series of exciting projects. Prerequisite: CS 187. This course counts as a CS Elective for the CS Major (BA/BS). 3 credits."
    },
    {
        "dept": "CS",
        "id": "335",
        "name": "Inside the Box: How Computers Work",
        "creds": 3,
        "offered": "Fall",
        "description": "How does the computer actually work? In this course we peel away the layers of abstraction and look at how switches become logic circuits, how logic circuits do math, and how programs really execute. We will wire up some simple examples of logic, then move on to programming an embedded ARM processor in a mix of assembly language and C, interfacing with various I/O devices and sensors, to experience what happens when machine code executes. We will also see the impact of hidden acceleration mechanisms like caches, pipelines, and branch predictors. Prerequisite: CS 220 (or CS 230). 3 credits."
    },
    {
        "dept": "CS",
        "id": "345",
        "name": "Practice and Applications of Data Management",
        "creds": 3,
        "offered": "Fall and Spring",
        "description": "Computing has become data-driven, and databases are now at the heart of commercial applications. The purpose of this course is to provide a comprehensive introduction to the use of data management systems within the context of various applications. Some of the covered topics include application-driven database design, schema refinement, implementation of basic transactions, data on the web, and data visualization. The class will follow a flipped classroom model; students will be required to review materials in preparation for each week and they will work collaboratively on practical problems in class. This course counts as an Elective toward the CS and INFORM Major. Students who have completed CS 445 are not eligible to take this course without instructor permission. Prerequisite: CS 187 (OR INFO 248 AND CS 186). 3 credits."
    },
    {
        "dept": "CS",
        "id": "348",
        "name": "Principles of Data Science",
        "creds": 3,
        "offered": "Spring",
        "description": "Data science uses various concepts, practices, algorithms, and systems to extract knowledge and insights from data. It encompasses techniques from machine learning, statistics, databases, visualization, and several other fields. When properly integrated, these techniques can help human analysts make sense of vast stores of digital information. This course presents the fundamental principles of data science, familiarizes students with the technical details of representative algorithms, and connects these concepts to applications in industry, science, and government, including fraud detection, marketing, scientific discovery, and web mining. The course assumes that students are familiar with basic concepts and algorithms from probability and statistics. This course counts as a CS Elective toward the CS Major. Prerequisites: CS 187, CS 240, and CS 250 (or MATH 455). 3 credits."
    },
    {
        "dept": "CS",
        "id": "360",
        "name": "Introduction to Computer and Network Security",
        "creds": 3,
        "offered": "Fall",
        "description": "This course provides an introduction to the principles and practice of computer and network security. A focus on both fundamentals and practical information will be stressed. The three key topics of this course are cryptography, privacy, and network security. Subtopics include ciphers, hashes, key exchange, security services (integrity, availability, confidentiality, etc.), security attacks, vulnerabilities, anonymous communications, and countermeasures. Prerequisites: CS 230. 3 credits."
    },
    {
        "dept": "CS",
        "id": "365",
        "name": "Digital Forensics",
        "creds": 3,
        "offered": "Fall",
        "description": "The goal of forensics is to gather artifacts for refinement into evidence that supports or refutes a hypothesis about an alleged crime or policy violation. Done correctly, forensics represents the application of science to law. The techniques can also be abused to thwart privacy. This course is a broad introduction to forensic investigation of digital information and devices. We cover the acquisition, analysis, and courtroom presentation of information from file systems, operating systems, networks, mobile applications, and the like. Students do not need experience with these systems. We review the use of some professional tools, however, the primary goal of the course is to understand why and from where artifacts are recoverable in these systems. Most assignments involve coding forensic tools. For a small portion of the class, we cover some relevant issues from the law, privacy, and current events. Thus, the class serves the well-rounded student who is eager to participate in class discussion on a variety of technical and social issues. This course counts as a CS Elective toward the CS and INFORM Majors. Prerequisites: CS 230. 3 credits."
    },
    {
        "dept": "CS",
        "id": "370",
        "name": "Introduction to Computer Vision",
        "creds": 3,
        "offered": "Spring",
        "description": "This introductory computer vision class will address fundamental questions about getting computers to \"see\" like humans. We investigate questions such as -What is the role of vision in intelligence? -How are images represented in a computer? -How can we write algorithms to recognize an object? -How can humans and computers \"learn to see better\" from experience? We will write a number of basic computer programs to do things like recognize handwritten characters, track objects in video, and understand the structure of images. Prerequisite: CS 240 or 383. 3 credits."
    },
    {
        "dept": "CS",
        "id": "373",
        "name": "Introduction to Computer Graphics",
        "creds": 3,
        "offered": "Spring",
        "description": "This course introduces the fundamental concepts of 2D and 3D computer graphics. It covers the basic methods for modeling, rendering, and imaging. Topics include: image processing, 2D/3D modeling, 3D graphics pipeline, WebGL, shading, texture mapping, ray tracing, 3D printing. Throughout the class, we will teach students to learn modern graphics techniques, to model the visual world algorithmically, and to implement algorithms using JavaScript. Students who have taken CS 473 are not eligible to take this course. Students cannot take CS 497C after taking this course. This course counts as a CS Elective toward the CS Major. Prerequisites: CS 187 and MATH 235 (or INFO 150 or CS 240). 3 credits."
    },
    {
        "dept": "CS",
        "id": "377",
        "name": "Operating Systems",
        "creds": 4,
        "offered": "Fall and Spring",
        "description": "In this course we examine the important problems in operating system design and implementation. The operating system provides a well-known, convenient, and efficient interface between user programs and the bare hardware of the computer on which they run. The operating system is responsible for allowing resources (e.g., disks, networks, and processors) to be shared, providing common services needed by many different programs (e.g., file service, the ability to start or stop processes, and access to the printer), and protecting individual programs from one another. The course will start with a brief historical perspective of the evolution of operating systems over the last fifty years, and then cover the major components of most operating systems. This discussion will cover the tradeoffs that can be made between performance and functionality during the design and implementation of an operating system. Particular emphasis will be given to three major OS subsystems: process management (processes, threads, CPU scheduling, synchronization, and deadlock), memory management (segmentation, paging, swapping), file systems, and operating system support for distributed systems. This course counts as a CS Elective toward the CS Major. Prerequisites: CS 230. 4 credits."
    },
    {
        "dept": "CS",
        "id": "383",
        "name": "Artificial Intelligence",
        "creds": 3,
        "offered": "Fall and Spring",
        "description": "The course explores key concepts underlying intelligent systems, which are increasingly deployed in consumer products and onlineservices. Topics includeproblem solving, state-space representation, heuristicsearch techniques, game playing, knowledge representation, logical reasoning, automated planning, reasoning underuncertainty, decision theory and machine learning. We will examine the use of these concepts in the design of intelligent agents in the context of severalapplications. Students should be comfortable programming in Python. This course counts as a CS Elective toward the CS Major. Prerequisites: CS 220 (or CS 230) and CS 240 (or STAT 515). 3 credits."
    },
    {
        "dept": "CS",
        "id": "389",
        "name": "Introducation to Machine Learning",
        "creds": 3,
        "offered": "Spring",
        "description": "The course provides an introduction to machine learning algorithms and applications. Machine learning algorithms answer the question: \"How can a computer improve its performance based on data and from its own experience?\" The course is roughly divided into thirds: supervised learning (learning from labeled data), reinforcement learning (learning via trial and error), and real-world considerations like ethics, safety, and fairness. Specific topics include linear and non-linear regression, (stochastic) gradient descent, neural networks, backpropagation, classification, Markov decision processes, state-value and action-value functions, temporal difference learning, actor-critic algorithms, the reward prediction error hypothesis for dopamine, connectionism for philosophy of mind, and ethics, safety, and fairness considerations when applying machine learning to real-world problems. This course counts as an Elective toward the CS and INFORM Majors. Prerequisite: CS 220 (or CS 230), CS 240 (or STAT 515), and MATH 233. 3 credits."
    },
    {
        "dept": "CS",
        "id": "403",
        "name": "Introduction to Robotics: Perception, Mechanics, Dynamics, and Control",
        "creds": 3,
        "offered": "Spring",
        "description": "This course covers concepts and methods to understand how robots move and interact with the physical world. We will study how to define robots, describe their state, and control their motion. We will study the representation of three-dimensional movement, mechanisms (kinematics and dynamics), actuators, dynamics-based feedback control, and trajectory optimization. Students will also learn Matlab software to build simulation and analysis tools. Prerequisites: MATH 235 and CS 220 (or CS 230). 3 credits."
    },
    {
        "dept": "CS",
        "id": "410",
        "name": "Compiler Techniques",
        "creds": 3,
        "offered": "Even Fall",
        "description": "This course explores the basic problems in the translation of programming languages focusing on theory and common implementation techniques for compiling traditional block structured programming languages to produce assembly or object code for typical machines. The course involves a substantial laboratory project in which the student constructs a working compiler for a considerable subset of a realistic programming language, within a provided skeleton. The lectures are augmented by a discussion section that covers details of the programming language used to build the compiler, the operating system, the source language, and various tools. Use of computer required. Text: Engineering a Compiler, Cooper and Torczon. This course counts as an Elective toward the CS Major. Prerequisites: CS 230 and either CS 250 (or MATH 455). 3 credits."
    },
    {
        "dept": "CS",
        "id": "420",
        "name": "Software Entrepreneurship",
        "creds": 3,
        "offered": "Fall",
        "description": "This course is geared towards students interested in developing software that moves from early stage proof-of-concept ideas towards marketable products with societal benefit. The course leverages the expertise of the Entrepreneurs in Residence (EIR) of the Ventures @ CICS initiative at CICS. The course is grounded in Challenge Based Learning (CBL), an active, student-directed instructional framework that was developed by Apple Inc. and educators. This course counts as an Elective toward the CS major. Prerequisites: CS 320 (or CS 326). 3 credits."
    },
    {
        "dept": "CS",
        "id": "445",
        "name": "Information Systems",
        "creds": 3,
        "offered": "Fall and Spring",
        "description": "This course is an introduction to the efficient management of large-scale data. The course includes principles for representing information as structured data, query languages for analyzing and manipulating structured data, and core systems principles that enable efficient computation on large data sets. Classical relational database topics will be covered (data modeling, SQL, query optimization, concurrency control), as well as semi-structured data (XML, JSON), and distributed data processing paradigms (e.g. MapReduce and Spark). Additional application topics may include web application development, data integration, processing data streams, database security and privacy. This course counts as an Elective toward the CS Major. Prerequisites: CS 220 (or 230) and CS 311 and CS 345. 3 credits."
    },
    {
        "dept": "CS",
        "id": "446",
        "name": "Search Engines",
        "creds": 3,
        "offered": "Spring",
        "description": "This course provides an overview of the important issues in information retrieval, and how those issues affect the design and implementation of search engines. The course emphasizes the technology used in Web search engines, and the information retrieval theories and concepts that underlie all search applications. Mathematical experience (as provided by CS 240) is required. You should also be able to program in Java (or some other closely related language). This course counts as an Elective toward the CS Major. Prerequisite: CS 240 or CS 383. 3 credits."
    },
    {
        "dept": "CS",
        "dept": "COMPSCI",
        "id": "429",
        "name": "Software Engineering Project Management",
        "creds": 3,
        "offered": "Fall and Spring",
        "description": "The purpose of this course is to provide students with practical experience in the management of software development projects. Students in this course will gain this experience by serving as software development team technical managers for teams of software engineering students in COMPSCI 320. As project managers, the students in COMPSCI 429 will be responsible for: supervising and managing the work of teams of COMPSCI 320 students; interfacing with the other COMPSCI 429 students managing other teams in the course; interfacing with the course instructor, course TA, and course customer. COMPSCI 429 students will be assigned readings in software engineering project management to provide a theoretical basis for their work in this course. But the majority of work in the course will be related to the actual management of assigned development teams. As team managers, COMPSCI 429 students will set goals and schedules for their teams, track and report team progress, negotiate with leaders of other teams and the course customer, and evaluate the work of members of their teams. COMPSCI 429 course assignments may include: written team goals, plans and schedules; periodic reports on team progress; documentation of agreements reached with other team leaders and customers; evaluations of the applicability of theoretical papers to the work of this course. This course will meet at the same times and places as COMPSCI 320. Additional meetings with team members and other students in COMPSCI 429 are also expected to be arranged by mutual agreement. An additional one hour weekly meeting of all of the students in COMPSCI 429 is required. Enrollment in this course is only by permission of the instructor, and is restricted to students who have previously taken COMPSCI 320, and received a grade of A or A-. 3 credits."
    },
    {
        "dept": "CS",
        "id": "453",
        "name": "Computer Networks",
        "creds": 3,
        "offered": "Fall and Spring",
        "description": "Introduction to computer communication networks and protocols. Fundamental concepts in the design and analysis of computer networks. Topics include: layered network architectures, networked applications, network programming interfaces, transport, congestion, routing, data link protocols, local area and data center networks, network security, and wireless networks. Examples drawn from the Internet (e.g., TCP, UDP, and IP) protocol suite. Homework assignments involve programming and written tasks. In Fall 2020, this course will be taught as a primarily online class, without in-class lectures, but with extensive on-line material including recorded video material, interactive exercises, and online discussion. There will be an optional weekly, one-hour in-class and on-line open discussion period. This course counts as an Elective toward the CS Major. Prerequisites: Experience programming; CS 230 or CS 377. 3 credits."
    },
    {
        "dept": "CS",
        "id": "461",
        "name": "Secure Distributed Systems",
        "creds": 3,
        "offered": "Fall",
        "description": "This is a class devoted to the study of securing distributed systems, with blockchain-based cryptocurrencies serving as our real platform of interest. We'll start with the fundamentals of Lamport's, Fischer's, and Douceur's results that fence-in all consensus system, and discuss Byzantine fault tolerance. We'll also look at the efficiency of the network architectures for peer-to-peer/distributed system communication and attacks on their security, such as denial of service attacks. And we'll review relevant applied cryptography such as elliptic curves. We ll discuss in detail the mechanisms of Bitcoin and Ethereum and we ll program distributed applications for Ethereum. Other topics include economics and finance. Assignments will include programming projects and reading research papers. The grade is also based on exams and participation in discussion. The course is based on a flipped classroom and uses a hybrid instruction model. Some of the course content is delivered online, however students are required to attend weekly class meetings. This course counts as a CS Elective toward the CS major (BA/BS), as well an Any 2 menu choice for the Security & Privacy track. Prerequisites: CS 326, CS 345, CS 377, CS 453, or CS 497P. 3 credits."
    },
    {
        "dept": "CS",
        "id": "466",
        "name": "Applied Cryptography",
        "creds": 3,
        "offered": "Spring",
        "description": "This is an undergraduate-level introduction to cryptography. It is a theory course with a significant mathematical component. However, our viewpoint will be theory applied to practice in that we will aim to treat topics in a way of applied value. We will discuss cryptographic algorithms used in practice and how to reason about their security. More fundamentally, we will try to understand what security is in a rigorous way that allows us to follow sound principles and uncover design weaknesses. The primary topics are: blockciphers, pseudorandom functions, symmetric-key encryption schemes, hash functions, message authentication codes, public-key encryption schemes, digital signature schemes, and public-key infrastructures. This course counts as an Elective toward the CS Major. Prerequisites: CS 311. 3 credits."
    },
    {
        "dept": "CS",
        "id": "474",
        "name": "Image Synthesis",
        "creds": 3,
        "offered": "Even Fall",
        "description": "This course provides a broad overview of the theory and practice of image synthesis. Topics include photorealistic rendering, global illumination techniques, Monte Carlo ray tracing, virtual reality, texture synthesis, and image editing. Previous experience with introductory computer graphics (such as CS 473) is preferred. Prerequisites: CS 187 or equivalent, MATH 235. 3 credits."
    },
    {
        "dept": "CS",
        "id": "501",
        "name": "Formal Language Theory",
        "creds": 3,
        "offered": "Spring",
        "description": "Introduction to formal language theory. Topics include finite state languages, context-free languages, the relationship between language classes and formal machine models, the Turing Machine model of computation, theories of computability, resource-bounded models, and NP-completeness. This course counts as an Elective toward the CS Major. Undergraduate Prerequisites: CS 311 or equivalent. It is recommended that students have a B- or better in 311 in order to attempt 501. 3 credits."
    },
    {
        "dept": "CS",
        "id": "503",
        "name": "Embedded Computing Systems",
        "creds": 3,
        "offered": "Fall",
        "description": "This course introduces tools for embedded computational applications in a class focused on team-oriented design applications. Your team will build an integrated robot to perform a challenge task and will compete against other teams for the best system. The course is heavily project-oriented (with a required lab) and discussions will include topics such as; (1) mechanisms, sensors, actuators and feedback systems, (2) analog and digital circuits, power amplifiers, signal processing, operational amplifiers, multiplexing, (3) I/O - A/D, D/A, and latching, serial and parallel interfaces, (4) signal processing/conditioning and (5) an introduction to real-time programming. Undergraduate Prerequisites: CS 383 or CS 403 or M&I-ENG 310 or M&I-ENG 313 or M&I-ENG 397B or E&C-ENG 313 or E&C-ENG 323 or E&C-ENG 353. 3 credits."
    },
    {
        "dept": "CS",
        "id": "508",
        "name": "Ethical Considerations in Computing",
        "creds": 3,
        "offered": "Spring",
        "description": "This course considers an array of ethical issues in computing. Readings, class discussions, and guest speakers will cover topics related to avenues of development in artificial intelligence, privacy, identity, inclusiveness, environmental responsibility, internet censorship, network policy, plagiarism, intellectual property and others. All examples will be drawn from current and recent events with readings from a range of sources both journalistic and academic. Course assignments will have real world applications and offer students opportunities for developing their speaking and writing skills. Class discussions will be a vibrant component of the course. Open to Graduate students only. Undergraduate CS Majors with permission of instructor (counts as an Elective toward the CS Major). 3 credits."
    },
    {
        "dept": "CS",
        "id": "513",
        "name": "Logic in Computer Science",
        "creds": 3,
        "offered": "Odd Fall",
        "description": "Rigorous introduction to mathematical logic from an algorithmic perspective. Topics include: Propositional logic: Horn clause satisfiability and SAT solvers; First Order Logic: soundness and completeness of resolution, compactness theorem. We will use the Coq theorem prover and Datalog. Prerequisites: CS 250 and CS 311. 3 credits."
    },
    {
        "dept": "CS",
        "id": "514",
        "name": "Algorithms for Data Science",
        "creds": 3,
        "offered": "Fall and Spring",
        "description": "With the advent of social networks, ubiquitous sensors, and large-scale computational science, data scientists must deal with data that is massive in size, arrives at blinding speeds, and often must be processed within interactive or quasi-interactive time frames. This course studies the mathematical foundations of big data processing, developing algorithms and learning how to analyze them. We explore methods for sampling, sketching, and distributed processing of large scale databases, graphs, and data streams for purposes of scalable statistical description, querying, pattern mining, and learning. This course counts as an Elective toward the CS Major. Undergraduate Prerequisites: CS 240 (or STATISTCS 515) and CS 311 both with a grade of B+ or better, OR (CS 240 and STATISTCS 515 and CS 311 and MATH 233 and MATH 235, all with a C or better). 3 credits"
    },
    {
        "dept": "CS",
        "id": "520",
        "name": "Theory and Practice of Software Engineering",
        "creds": 3,
        "offered": "Fall",
        "description": "Introduces students to the principal activities and state-of-the-art techniques involved in developing high-quality software systems. Topics include: requirements engineering, formal specification methods, design principles & patterns, verification & validation, debugging, and automated software engineering. This course counts as an Elective toward the CS Major. Undergraduate Prerequisites: CS 320. 3 credits."
    },
    {
        "dept": "CS",
        "id": "528",
        "name": "Mobile and Ubiquitous Computing",
        "creds": 3,
        "offered": "Spring",
        "description": "This course will introduce students to the field of mobile sensing and ubiquitous computing (Ubicomp) an emerging CS research area that aims to design and develop disruptive technologies with hardware and software systems for real-world messy, noisy and mobile scenarios. The students will learn how to build mobile sensing systems, how to implement it with ubiquitous computing tools, how to make sense of the sensor data and model the target variables. Lastly, the students will learn how to critically think about problems in many application areas including Human-Computer Interaction, Medicine, Sustainability, Transportation, Psychology and Economics, and subsequently practice to find appropriate Ubicomp solutions. There is no exam in this course. The student is expected to work on different hands-on assignments, critique writing, and a final project. This course counts as an Elective toward the CS Major. Undergraduate Prerequisites: CS 230 and CS 240. 3 credits."
    },
    {
        "dept": "CS",
        "id": "529",
        "name": "Software Engineering Project Management",
        "creds": 3,
        "offered": "Fall and Spring",
        "description": "The purpose of this course is to provide students with practical experience in the management of software development projects. Students in this course will gain this experience by serving as software development team technical managers for teams of software engineering students in CS 320. As project managers, the students in CS 529 will be responsible for: supervising and managing the work of teams of CS 320 students; interfacing with the other CS 529 students managing other teams in the course; interfacing with the course instructor, course TA, and course customer. CS 529 students will be assigned readings in software engineering project management to provide a theoretical basis for their work in this course. But the majority of work in the course will be related to the actual management of assigned development teams. As team managers, CS 529 students will set goals and schedules for their teams, track and report team progress, negotiate with leaders of other teams and the course customer, and evaluate the work of members of their teams. CS 529 course assignments may include: written team goals, plans and schedules; periodic reports on team progress; documentation of agreements reached with other team leaders and customers; evaluations of the applicability of theoretical papers to the work of this course. This course will meet at the same times and places as CS 320. Additional meetings with team members and other students in CS 529 are also expected to be arranged by mutual agreement. An additional one hour weekly meeting of all of the students in CS 529 is required. Enrollment in this course is only by permission of the instructor, and is restricted to students who have previously taken CS 320, and received a grade of A or A-. 3 credits."
    },
    {
        "dept": "CS",
        "id": "532",
        "name": "Systems for Data Science",
        "creds": 3,
        "offered": "Fall",
        "description": "In this course, students will learn the fundamentals behind large-scale systems in the context of data science. We will cover the issues involved in scaling up (to many processors) and out (to many nodes) parallelism in order to perform fast analyses on large datasets. These include locality and data representation, concurrency, distributed databases and systems, performance analysis and understanding. We will explore the details of existing and emerging data science platforms, including MapReduce-Hadoop, Spark, and more. This course counts as an Elective toward the CS Major. Undergraduate Prerequisites: CS 311, CS 345, and CS 377. 3 credits."
    },
    {
        "dept": "CS",
        "id": "535",
        "name": "Computer Architecture",
        "creds": 3,
        "offered": "Spring",
        "description": "The structure of digital computers is studied at several levels, from the basic logic level, to the component level, to the system level. Topics include: the design of basic components such as arithmetic units and registers from logic gates; the organization of basic subsystems such as the memory and I/O subsystems; the interplay between hardware and software in a computer system; the von Neumann architecture and its performance enhancements such as cache memory, instruction and data pipelines, coprocessors, and parallelism. Weekly assignments, semester project, 2 hours exams, final. In-class participation exercises will replace the exams for Spring 2021. Undergraduate Prerequisites: CS 335. 3 credits."
    },
    {
        "dept": "CS",
        "id": "546",
        "name": "Applied Information Retrieval",
        "creds": 3,
        "offered": "Fall",
        "description": "CS 546 is a graduate level course intended to cover information retrieval and other information processing activities, from an applied perspective. There will be numerous programming projects and assignments. It provides a richer technical follow on to CS 446 (Search Engines) for undergraduates interested in a deeper understanding of the technologies. It also provides a strong basis for continuing on with CS 646 (Information Retrieval) for those graduate students who are interested in a more complete theoretical coverage of the area. Topics will include: search engine construction (document acquisition, processing, indexing, and querying); learning to rank; information retrieval system performance evaluation; classification and clustering; other machine learning information processing tasks (e.g. basic deep learning models for information retrieval); and many more. This course counts as an Elective toward the CS Major. Undergraduate Prerequisites: CS 320 and either CS 383, CS 446, or CS 585. 3 credits."
    },
    {
        "dept": "CS",
        "id": "550",
        "name": "Introduction to Simulation",
        "creds": 3,
        "offered": "Spring",
        "description": "How can we use computers to design systems and, more generally, make decisions, in the face of complexity and uncertainty? Simulation techniques apply the power of the computer to study complex stochastic systems when analytical or numerical techniques do not suffice. It is the most frequently used methodology for the design and evaluation of computer, telecommunication, manufacturing, healthcare, financial, and transportation systems, to name just a few application areas. Simulation is an interdisciplinary subject, incorporating ideas and techniques from computer science, probability, statistics, optimization, and number theory. Simulation models, which embody deep domain expertise, can effectively complement machine-learning approaches. This course will provide the student with a hands-on introduction into this fascinating and useful subject. This course counts as an Elective toward the CS Major. Undergraduate Prerequisite: CS 187 and STAT 515. 3 credits."
    },
    {
        "dept": "CS",
        "id": "560",
        "name": "Introduction to Computer and Network Security",
        "creds": 3,
        "offered": "Fall",
        "description": "This course provides an introduction to the principles and practice of computer and network security with a focus on both fundamental principles and practical applications through hands-on approach. Many of the principles are taught through examples. The key topics of this course are a brief introduction to computer networking; applied cryptography; protecting users, data, and services; network security, and common threats and defense strategies. Students will complete a number of practical lab assignments as well as auto-graded quizzes/assignments. 3 credits."
    },
    {   "dept": "COMPSCI",
        "id": "561",
        "name": "Systems Defense and Test",
        "creds": 3,
        "offered": "Spring",
        "description": "This class trains students to detect and analyze weaknesses and vulnerabilities in target systems as a method of assessing the security of a system. We focus on tools and techniques that an attacker would employ but from the perspective of an ethical system administrator. Topics include tools and techniques for penetration testing and attacks, information gathering, social engineering, and defenses. Specific topics include malware, denial of service attacks, SQL injection, buffer overflow, session hijacking, and system hacking, network sniffing and scans, wireless encryption weaknesses and other WiFi issues, IDS/firewall evasion, metasploit tools, physical security, and setting up honeypots. Was INFOSEC 690S. This course counts as an Elective toward the CS Major. Undergraduate Prerequisites: COMPSCI 460 (or COMPSCI 597N or COMPSCI 660) and COMPSCI 453. 3 credits."
    },
    {   "dept": "COMPSCI",
        "id": "563",
        "name": "Internet Law and Policy",
        "creds": 3,
        "offered": "Fall",
        "description": "This course is meant for those looking for legal knowledge for use in computing- and Internet-related endeavors. The course will include topics related to security, policy, and the use of machine learning and related technologies. In additional, students will be assigned law review articles and will learn to do legal research so that they can remain updated after the course ends. Topics covered are all in the context of the ubiquity of the Internet and computing, and they include: basic legal principles, contract law, substantive laws, intellectual property law, ethics, dealing with third parties, policy issues, and topical issues such as implications of applying machine learning technology. This course was formerly numbered as INFOSEC 690L. 3 credits."
    },
    {
        "dept": "CS",
        "id": "571",
        "name": "Data Visualization and Exploration",
        "creds": 3,
        "offered": "Spring",
        "description": "In this course, students will learn the fundamental algorithmic and design principles of visualizing and exploring complex data. The course will cover multiple aspects of data presentation including human perception and design theory; algorithms for exploring patterns in data such as topic modeling, clustering, and dimensionality reduction. A wide range of statistical graphics and information visualization techniques will be covered. We will explore numerical data, relational data, temporal data, spatial data, graphs and text. Hands-on projects will be based on Python or JavaScript with D3. This course counts as an Elective toward the CS and INFORM Majors. Undergraduate Prerequisites: CS 220, or CS 230, or CS 326. No prior knowledge of data visualization or exploration is assumed. 3 credits."
    },
    {
        "dept": "CS",
        "id": "574",
        "name": "Intelligent Visual Computing",
        "creds": 3,
        "offered": "Spring",
        "description": "Intelligent visual computing is an emerging new field that seeks to combine modern trends in machine learning, computer graphics, computer vision to intelligently process, analyze and synthesize 2D/3D visual data. The course will start by covering 2D image and 3D shape representations, classification and regression techniques, and the fundamentals of deep learning. The course will then provide an in-depth background on analysis and synthesis of images and shapes with deep learning, in particular convolutional neural networks, recurrent neural networks, memory networks, auto-encoders, adversarial networks, reinforcement learning methods, and probabilistic graphical models. Students will complete 5 programming assignments in Matlab/Octave and work on a course project related to visual computing with machine learning. This course counts as a CS Elective toward the CS major (BA/BS). Course was previously CS 590IV. Undergraduate Prerequisites:CS 311, CS 383, CS 373 (or CS 473). 3 credits."
    },
    {
        "dept": "CS",
        "id": "575",
        "name": "Combinatorics and Graph Theory",
        "creds": 3,
        "offered": "Even Fall",
        "description": "This course is a basic introduction to combinatorics and graph theory for advanced undergraduates in computer science, mathematics, engineering and science. Topics covered include: elements of graph theory; Euler and Hamiltonian circuits; graph coloring; matching; basic counting methods; generating functions; recurrences; inclusion-exclusion; and Polya's theory of counting. This course counts as an Elective toward the CS Major. Undergraduate Prerequisites: mathematical maturity; calculus; linear algebra; strong performance in some discrete mathematics class, such as CS 250 or MATH 455. Modern Algebra - MATH 411 - is helpful but not required. 3 credits."
    },
    {
        "dept": "CS",
        "id": "576",
        "name": "Game Programming",
        "creds": 3,
        "offered": "Fall",
        "description": "Game Programming introduces students to concepts of computer game development, including 2D and 3D modeling, character design, animation, game art, basic game AI, audio and video effects. The course will help students build the programming skills needed to turn ideas into games. Both runtime systems and the asset pipelines will be covered. Students will work on various game programming exercises with modern game engines and graphics APIs. This course counts as a CS Elective for the CS Major (BA or BS). Undergraduate Prerequisites: CS 220, 311, and MATH 235. 3 credits."
    },
    {
        "dept": "CS",
        "id": "578",
        "name": "Distributed Computing and Systems",
        "creds": 3,
        "offered": "Odd Fall",
        "description": "This course will teach the principles and practice of distributed systems as applied in today's cloud computing environments. The course will cover concepts in distributed computing including distributed clocks, consistency, fault tolerance, and consensus. The course will also cover popular cloud computing service models, MapReduce and related programming models, datacenter architectures, and security and privacy issues in public clouds. The course will expose students to popular cloud platforms such as Amazon EC2, Google AppEngine, and Microsoft Azure. The assignments in the course will include a nontrivial programming component that assumes familiarity with multithreaded programming and network programming. This course counts as a CS Elective toward the CS major (BA or BS). Prerequisite: CS 377 or an equivalent first course in operating systems. 3 credits."
    },
    {
        "dept": "CS",
        "id": "589",
        "name": "Machine Learning",
        "creds": 3,
        "offered": "Fall and Spring",
        "description": "This course will introduce core machine learning models and algorithms for classification, regression, clustering, and dimensionality reduction. On the theory side, the course will focus on effectively using machine learning methods to solve real-world problems with an emphasis on model selection, regularization, and empirical evaluation. The assignments will involve both mathematical problems and implementation tasks. Knowledge of a high-level programming language is absolutely necessary. Python is most commonly used (along with standard libraries such as numpy, scipy, and scikit-learn), but languages such as Matlab, R, Scala, Julia would also be suitable. While this course has an applied focus, it still requires appropriate mathematical background in probability and statistics, calculus, and linear algebra. The prerequisites for undergrads were previously CS 383 and MATH 235 (CS 240 provides sufficient background in probability, and MATH 131/132 provide sufficient background in calculus). Graduate students can check the descriptions for these courses to verify that they have sufficient mathematical background for 589. Strong foundations in linear algebra, calculus, probability, and statistics are essential for successfully completing this course. Graduate students from outside computer science with sufficient background are also welcome to take the course. This course counts as an Elective toward the CS Major. Undergraduate Prerequisites: MATH 545 and CS 240 and STATS 515 C or better. MATH 545 can be skipped by students who have taken MATH 235 and MATH 233 both with B+ or better. STATS 515 can be skipped by students who have taken CS 240 with a B+ or better. 3 credits."
    },
    {
        "dept": "INFO",
        "id": "150",
        "name": "A Mathematical Foundation for Informatics",
        "creds": 3,
        "offered": "Fall and Spring",
        "description": "Mathematical techniques useful in the study of computing and information processing. The mathematical method of definition and proof. Sets, functions, and relations. Combinatorics, probability and probabilistic reasoning. Graphs and trees as models of data and of computational processes. Prerequisite: R1 math skills recommended. Not intended for Computer Science majors students interested in a majors-level treatment of this material should see CS 240 and 250 (or MATH 455). 3 credits."
    },
    {
        "dept": "INFO",
        "id": "203",
        "name": "A Networked World",
        "creds": 3,
        "offered": "Fall",
        "description": "The course will cover the technical foundations of today s communication networks, particularly the Internet. It will also address key social, policy, economic and legal aspects of these networks, their use (and abuse), and their regulation. This course covers computer science topics, but all material will be presented in a way that is accessible to an educated audience with or without a strong technical background. Not intended for Computer Science majors students interested in a majors-level treatment of this material should see CS 453. 3 credits."
    },
    {
        "dept": "INFO",
        "id": "248",
        "name": "Introduction to Data Science",
        "creds": 4,
        "offered": "Spring",
        "description": "This course is an introduction to the concepts and skills involved with the collection, management, analysis, and presentation of data sets and the data products that result from the work of data scientists. Privacy, algorithmic bias and ethical issues are also discussed. Students will work with data from the financial, epidemiological, educational, and other domains. The course provides examples of real-world data that students work with using various software tools. This course consists of two lecture meetings and one lab meeting per week. Readings will be assigned as preparation for each class meeting. A semester project will be assigned. Students work in pairs to develop their project over the semester. The project provides students with an opportunity to work collaboratively to explore the topics in more depth in a specialized domain. A midterm and final exam will be given. Grades are determined by a combination of scores on lab activities, projects, and exam scores. Software: all software is freely available. Course was previously INFO 397F. Prerequisites: CS 121 and PSYCH 240 (or OIM 240, or STAT 240, or STAT 515, or RES ECON 212, or SOCIOL 212). 4 credits."
    },
    {
        "dept": "CICS",
        "id": "256",
        "name": "Make: A Hands-on Introduction to Physical Computing",
        "creds": 4,
        "offered": "Fall and Spring",
        "description": "Inspired by the Maker movement, this course provides a hands-on introduction to physical computing: sensing and responding to the physical world using computers. Specific topics include: basic electronics and circuit design, microcontroller programming using Arduinos, sensing and responding to the physical world, rapid prototyping (3D printing and laser cutting etc.), soft circuits and wearable electronics. The course will encourage and empower students to invent, design, and build practical hardware projects that interact with the physical world. This course has a required lab section, and counts as one of the CS Lab Science Requirement courses for the BS-CS. Prerequisite: CS 187 and Basic Math Skills (R1). 4 credits."
    },
    {
        "dept": "CS",
        "id": "391L",
        "name": "SEMINAR - COMPUTER CRIME LAW AND THE TECHNOLOGIES OF INVESTIGATION AND PRIVACY",
        "creds": 3,
        "offered": "Fall",
        "description": "A study, analysis, and discussion of the legal issues related to crimes involving computers and networks, including topical actions by dissidents and governments. We will also study the technologies of forensic investigation, intelligence gathering, privacy enhancement, and censorship resistance. Our main legal topics will include recent and important case law, statutes, and constitutional clauses concerning authorization, access, search and seizure, wiretaps, the right to privacy, and FISA. Our technology topics will include methods of investigation and resistance in the context of the Internet and Cellular networks. Students are assumed to have no background in legal concepts. Students will be required to complete substantial legal readings, complete significant written analysis of rulings, learn about technologies in detail, and participate in lively class discussion. Prerequisite: CS 230 and ENGLWRIT 112. This course counts as a CS Elective toward the CS major. 3 credits."
    },
    {
        "dept": "CS",
        "id": "490A",
        "name": "APPLICATIONS OF NATURAL LANGUAGE PROCESSING",
        "creds": 3,
        "offered":  "Fall",
        "description": "This course will introduce NLP methods and applications, such as text classification, sentiment analysis, machine translation, and other applications to identify and use the meaning of text. During the course, students will (1) learn fundamental methods and algorithms for NLP; (2) become familiar with key facts about human language that motivate them, and help practitioners know what problems are possible to solve; and (3) complete a series of hands-on projects to use, implement, experiment with, and improve NLP tools. This course counts as a CS Elective for the CS Major (BA or BS). Prerequisites: CS 220 and CS 240. An alternate prerequisite of LINGUIST 492B is acceptable for Linguistics majors. 3 credits."
    },
    {
        "dept": "CS",
        "id": "497S",
        "name": "SPECIAL TOPICS - SCALABLE WEB SYSTEMS",
        "creds": 3,
        "offered": "Fall",
        "description": "The web has become a large and complex area for application development. Access to an abundance of open source languages, libraries, and frameworks has led to the quick and easy construction of a variety of applications with several moving parts working in coordination to present to the user the illusion of a single program. In reality, web applications are extremely difficult to get right. They involve a large collection of coordinated services, multiple databases, complicated user interfaces, security and performance issues, and ever changing 3rd party services, spread across physical and virtual machines. These complications are further stressed by the large number of concurrent users that access these applications every second. This course will investigate several well known web-based applications and the technology and software architecture used to scale these applications. We will also study a specific topic related to scalability in software design in the context of web application architecture. This course counts as a CS Elective toward the CS major (BA/BS) and as an Elective toward the INFORM major. Prerequisites: CS 326. 3 credits."
    },
    {
        "dept": "CS",
        "id": "590J",
        "name": "CYBER EFFECTS: REVERSE ENGINEERING, EXPLOIT ANALYSIS, AND CAPABILITY DEVELOPMENT",
        "creds": 3,
        "offered": "Spring",
        "description": "This course covers a broad range of topics related to cyber security and operations. Our focus is on real world studies of reverse engineering, exploit analysis, and capability development within the context of computer network operations and attack. The course has an emphasis on hands-on exercises and projects. Topics covered include computer architecture and assembly language, principles of embedded security, the essentials of exploit development and analysis (including using industry standard tools such as Ghidra, and utilizing computer security databases such as CVE), and discussion of real-world events and techniques. This course counts as an Elective toward the CS Major. Undergraduate Prerequisite: CS 230 (or ECE 322) and CS 460 (or ECE 371). 3 credits."
    },
    {
        "dept": "CS",
        "id": "590K",
        "name": "ADVANCED DIGITAL FORENSIC SYSTEMS",
        "creds": 3,
        "offered": "Spring",
        "description": "This course introduces students to the principal activities and state-of-the-art techniques involved in developing digital forensics systems. Topics covered may include: advanced file carving and reconstruction, forensic analysis of modern filesystems, network forensics, mobile device forensics, memory forensics, and anti-forensics. This course counts as an Elective toward the CS Major. Undergraduate Prerequisites: CS 365 (or CS 377). 3 credits."
    },
    {
        "dept": "CS",
        "id": "590T",
        "name": "ALGORITHMIC FAIRNESS AND STRATEGIC BEHAVIOR",
        "creds": 3,
        "offered": "Fall",
        "description": "Recent years have seen a dramatic rise in the use of algorithms for solving problems involving strategic decision makers. Deployed algorithms now assist in a variety of economic interactions: assigning medical residents to schools, allocating students to courses, allocating security resources in airports, allocating computational resources and dividing rent. We will explore foundational topics at the intersection of economics and computation, starting with the foundations of game theory: Nash equilibria, the theory of cooperative games, before proceeding to covering more advanced topics: matching algorithms, allocation of indivisible goods, and mechanism design. This course counts as a CS Elective for the CS Major (BA or BS). Prerequisites: CS 240 and CS 250. 3 credits."
    },
    {
        "dept": "CS",
        "id": "590W",
        "name": "HEALTH INFORMATICS AND DATA SCIENCE",
        "creds": 3,
        "offered": "Fall",
        "description": "This course aims to introduce the discipline of Clinical Health Informatics and data to prepare our students as forerunners of the future of digital health care systems. Followed by an overview of the health informatics industry, it covers a broad range of introductory topics, such as the structure of current health care systems, various types of health data, theoretical framework and practice use of quantitative analytic methodologies, and ethics. More specifically, this course will teach important health informatics technologies and standards, such as electronic health records, medical claims data, imaging/free-text clinical notes, patient-reported outcomes, traditional and machine learning-based analytic algorithms, data visualization, and clinical research and experimental procedures. It is noteworthy that the course is not designed to introduce new types of machine learning or artificial intelligence algorithms for health-related data. Instead, this course aims to teach students how to comprehend and process health data and apply advanced computational models to solve important clinical problems. This course counts as a CS elective for the CS major (BA or BS). Undergraduate Prerequisite: CS 240 or STATISTCS 515. 3 credits."
    },
    {
        "dept": "CS",
        "id": "591NR",
        "name": "SEMINAR - NEURAL NETWORKS: NEUROSCIENCE AND ENGINEERING",
        "creds": 3,
        "offered": "Spring",
        "description": "This is a project based course, focusing on the science connecting the field of neural network with human brain mechanism, as well as advancements which are at the front of the field. We start by introducing a few neural network architectures with their learning paradigms, including deep feedforward and recurrent networks, Hopfield s memory, and Kohonen s self organizing maps. We continue by building on the top of these: clique structures and brain-like updatable architectures, explainable AI, combining symbolic with subsymbolic into one strong AI, robust AI, deep fake applications, and up to lifelong learning. The course is project based with grades based on active class participation, presenting non-trivial topics, research project that will be done during the semester, and research paper written based on this work. I ll assist students to get their research submitted to publications, if their work will reach high level. Students in 591NR will be able to run simpler projects. COMPARISON BETWEEN CS 682 AND 591NR/691NR: 682 teaches the engineering techniques necessary to train current neural networks. 591NR/691NR provides far larger view of the field, focusing on the science both relation with human and natural intelligence, and on the advancements which are in the forefront of the neural networks field. 3 credits. This course counts as an Elective toward the CS Major. Undergraduate Prerequisites: CS 311. 3 credits."
    },
    {
        "dept": "CS",
        "id": "596E",
        "name": "INDEPENDENT STUDY - MACHINE LEARNING APPLIED TO CHILD RESCUE",
        "creds": 3,
        "offered": "Fall and Spring",
        "description": "Students will work collaboratively to construct production-grade software used to advance the goal of Child Rescue. 3 credits"
    }
]